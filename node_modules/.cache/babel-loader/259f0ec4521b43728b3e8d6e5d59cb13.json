{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\n\nexport default function useOnRouteFocus(_ref) {\n  let {\n    router,\n    getState,\n    key: sourceRouteKey,\n    setState\n  } = _ref;\n  const {\n    onRouteFocus: onRouteFocusParent\n  } = React.useContext(NavigationBuilderContext);\n  return React.useCallback(key => {\n    const state = getState();\n    const result = router.getStateForRouteFocus(state, key);\n\n    if (result !== state) {\n      setState(result);\n    }\n\n    if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n      onRouteFocusParent(sourceRouteKey);\n    }\n  }, [getState, onRouteFocusParent, router, setState, sourceRouteKey]);\n}","map":{"version":3,"mappings":"AAKA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,wBAAP,MAAqC,4BAArC;AASA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,eAAT,OAKK;AAAA,MALqD;AACvEC,UADuE;AAEvEC,YAFuE;AAGvEC,OAAG,EAAEC,cAHkE;AAIvEC;AAJuE,MAKrDC;AAClB,QAAM;AAAEC,gBAAY,EAAEC;AAAhB,MAAuCV,KAAK,CAACW,UAANX,CAC3CC,wBAD2CD,CAA7C;AAIA,SAAOA,KAAK,CAACY,WAANZ,CACJK,GAAD,IAAiB;AACf,UAAMQ,KAAK,GAAGT,QAAQ,EAAtB;AACA,UAAMU,MAAM,GAAGX,MAAM,CAACY,qBAAPZ,CAA6BU,KAA7BV,EAAoCE,GAApCF,CAAf;;AAEA,QAAIW,MAAM,KAAKD,KAAf,EAAsB;AACpBN,cAAQ,CAACO,MAAD,CAARP;AACD;;AAED,QAAIG,kBAAkB,KAAKM,SAAvBN,IAAoCJ,cAAc,KAAKU,SAA3D,EAAsE;AACpEN,wBAAkB,CAACJ,cAAD,CAAlBI;AACD;AAXE,KAaL,CAACN,QAAD,EAAWM,kBAAX,EAA+BP,MAA/B,EAAuCI,QAAvC,EAAiDD,cAAjD,CAbKN,CAAP;AAeD","names":["React","NavigationBuilderContext","useOnRouteFocus","router","getState","key","sourceRouteKey","setState","_ref","onRouteFocus","onRouteFocusParent","useContext","useCallback","state","result","getStateForRouteFocus","undefined"],"sources":["/Users/suporte/PetCare/Telas/TCCPetcare/node_modules/@react-navigation/core/lib/module/useOnRouteFocus.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\n\ntype Options<Action extends NavigationAction> = {\n  router: Router<NavigationState, Action>;\n  getState: () => NavigationState;\n  setState: (state: NavigationState) => void;\n  key?: string;\n};\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport default function useOnRouteFocus<Action extends NavigationAction>({\n  router,\n  getState,\n  key: sourceRouteKey,\n  setState,\n}: Options<Action>) {\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  return React.useCallback(\n    (key: string) => {\n      const state = getState();\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (result !== state) {\n        setState(result);\n      }\n\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n        onRouteFocusParent(sourceRouteKey);\n      }\n    },\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\n  );\n}\n"]},"metadata":{},"sourceType":"module"}