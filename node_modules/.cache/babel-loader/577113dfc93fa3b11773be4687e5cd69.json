{"ast":null,"code":"import { CommonActions } from '@react-navigation/routers';\nexport const NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  const methods = [...Object.keys(CommonActions), 'addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions'];\n  const listeners = {};\n\n  const removeListener = (event, callback) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(cb => cb !== callback);\n    }\n  };\n\n  let current = null;\n  const ref = {\n    get current() {\n      return current;\n    },\n\n    set current(value) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(_ref => {\n          let [event, callbacks] = _ref;\n          callbacks.forEach(callback => {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce((acc, name) => {\n      acc[name] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (current == null) {\n          switch (name) {\n            case 'addListener':\n              {\n                const [event, callback] = args;\n                listeners[event] = listeners[event] || [];\n                listeners[event].push(callback);\n                return () => removeListener(event, callback);\n              }\n\n            case 'removeListener':\n              {\n                const [event, callback] = args;\n                removeListener(event, callback);\n                break;\n              }\n\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n\n      return acc;\n    }, {})\n  };\n  return ref;\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AAQA,OAAO,MAAMC,qBAAqB,GAChC,+QADK;AAGP,eAAe,SAASC,4BAAT,GAEmC;AAChD,QAAMC,OAAO,GAAG,CACd,GAAGC,MAAM,CAACC,IAAPD,CAAYJ,aAAZI,CADW,EAEd,aAFc,EAGd,gBAHc,EAId,WAJc,EAKd,UALc,EAMd,WANc,EAOd,WAPc,EAQd,cARc,EASd,UATc,EAUd,WAVc,EAWd,iBAXc,EAYd,mBAZc,CAAhB;AAeA,QAAME,SAAuD,GAAG,EAAhE;;AAEA,QAAMC,cAAc,GAAG,CACrBC,KADqB,EAErBC,QAFqB,KAGlB;AACH,QAAIH,SAAS,CAACE,KAAD,CAAb,EAAsB;AACpBF,eAAS,CAACE,KAAD,CAATF,GAAmBA,SAAS,CAACE,KAAD,CAATF,CAAiBI,MAAjBJ,CAAyBK,EAAD,IAAQA,EAAE,KAAKF,QAAvCH,CAAnBA;AACD;AANH;;AASA,MAAIM,OAAiD,GAAG,IAAxD;AAEA,QAAMC,GAAiD,GAAG;AACxD,QAAID,OAAJ,GAAc;AACZ,aAAOA,OAAP;AAFsD;;AAIxD,QAAIA,OAAJ,CAAYE,KAAZ,EAA6D;AAC3DF,aAAO,GAAGE,KAAVF;;AAEA,UAAIE,KAAK,IAAI,IAAb,EAAmB;AACjBV,cAAM,CAACW,OAAPX,CAAeE,SAAfF,EAA0BY,OAA1BZ,CAAkCa,QAAwB;AAAA,cAAvB,CAACT,KAAD,EAAQU,SAAR,IAAuBD;AACxDC,mBAAS,CAACF,OAAVE,CAAmBT,QAAD,IAAc;AAC9BK,iBAAK,CAACK,WAANL,CACEN,KADFM,EAEEL,QAFFK;AADF;AADF;AAQD;AAhBqD;;AAkBxDM,WAAO,EAAE,MAAM;AACb,UAAIR,OAAO,IAAI,IAAf,EAAqB;AACnB,eAAO,KAAP;AACD;;AAED,aAAOA,OAAO,CAACQ,OAARR,EAAP;AAvBsD;AAyBxD,OAAGT,OAAO,CAACkB,MAARlB,CAAoB,CAACmB,GAAD,EAAMC,IAAN,KAAe;AACpCD,SAAG,CAACC,IAAD,CAAHD,GAAY,YAAoB;AAAA,0CAAhBE,IAAgB;AAAhBA,cAAgB,MAAhBA,GAAgBC,eAAhBD;AAAgB;;AAC9B,YAAIZ,OAAO,IAAI,IAAf,EAAqB;AACnB,kBAAQW,IAAR;AACE,iBAAK,aAAL;AAAoB;AAClB,sBAAM,CAACf,KAAD,EAAQC,QAAR,IAAoBe,IAA1B;AAEAlB,yBAAS,CAACE,KAAD,CAATF,GAAmBA,SAAS,CAACE,KAAD,CAATF,IAAoB,EAAvCA;AACAA,yBAAS,CAACE,KAAD,CAATF,CAAiBoB,IAAjBpB,CAAsBG,QAAtBH;AAEA,uBAAO,MAAMC,cAAc,CAACC,KAAD,EAAQC,QAAR,CAA3B;AACD;;AACD,iBAAK,gBAAL;AAAuB;AACrB,sBAAM,CAACD,KAAD,EAAQC,QAAR,IAAoBe,IAA1B;AAEAjB,8BAAc,CAACC,KAAD,EAAQC,QAAR,CAAdF;AACA;AACD;;AACD;AACEoB,qBAAO,CAACC,KAARD,CAAc1B,qBAAd0B;AAhBJ;AADF,eAmBO;AACL;AACA,iBAAOf,OAAO,CAACW,IAAD,CAAPX,CAAc,GAAGY,IAAjBZ,CAAP;AACD;AAvBH;;AAyBA,aAAOU,GAAP;AA1BC,OA2BA,EA3BAnB;AAzBqD,GAA1D;AAuDA,SAAOU,GAAP;AACD","names":["CommonActions","NOT_INITIALIZED_ERROR","createNavigationContainerRef","methods","Object","keys","listeners","removeListener","event","callback","filter","cb","current","ref","value","entries","forEach","_ref","callbacks","addListener","isReady","reduce","acc","name","args","arguments","push","console","error"],"sources":["/Users/suporte/PetCare/Telas/TCCPetcare/node_modules/@react-navigation/core/lib/module/createNavigationContainerRef.tsx"],"sourcesContent":["import { CommonActions } from '@react-navigation/routers';\n\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerRefWithCurrent,\n} from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'isFocused',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  const removeListener = (\n    event: string,\n    callback: (...args: any[]) => void\n  ) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter((cb) => cb !== callback);\n    }\n  };\n\n  let current: NavigationContainerRef<ParamList> | null = null;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    get current() {\n      return current;\n    },\n    set current(value: NavigationContainerRef<ParamList> | null) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(([event, callbacks]) => {\n          callbacks.forEach((callback) => {\n            value.addListener(\n              event as keyof NavigationContainerEventMap,\n              callback\n            );\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (current == null) {\n          switch (name) {\n            case 'addListener': {\n              const [event, callback] = args;\n\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n\n              return () => removeListener(event, callback);\n            }\n            case 'removeListener': {\n              const [event, callback] = args;\n\n              removeListener(event, callback);\n              break;\n            }\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n  };\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module"}